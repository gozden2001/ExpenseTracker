version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - myappnetwork

  kafka:
    image: wurstmeister/kafka:latest
    networks:
      - myappnetwork
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONFLUENT_TOPIC_REPLICATION_FACTOR: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  mysql:
    image: mysql:latest
    container_name: mysqldb
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: testdb
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - myappnetwork

  mysqlanalytics:
    image: mysql:latest
    container_name: mysqlanalyticsdb
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: logs
    volumes:
      - analytics_data:/var/lib/mysql
    networks:
      - myappnetwork

  spring:
    image: springttest:latest
    container_name: springboot-app
    ports:
      - "8081:8080"
    environment:
      MYSQL_HOST: mysqldb
      MYSQL_PORT: 3306
      MYSQL_DB_NAME: testdb
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
    networks:
      - myappnetwork
    depends_on:
      - kafka

  logger:
    image: loggerservice:latest
    container_name: springboot-logger
    ports:
      - "8082:8082"
    environment:
      MYSQL_HOST: mysqlanalyticsdb
      MYSQL_PORT: 3306
      MYSQL_DB_NAME: logs
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
    networks:
      - myappnetwork
    depends_on:
      - kafka

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    environment:
      #GF_SERVER_ROOT_URL: http://my.grafana.server/
      GF_INSTALL_PLUGINS: grafana-clock-panel
      GF_RENDERING_SERVER_URL: http://renderer:8085/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - myappnetwork

  renderer:
    image: grafana/grafana-image-renderer:latest
    ports:
      - 8085

networks:
  myappnetwork:


volumes:
  mysql_data:
    external: true
  analytics_data:
    external: true
  grafana-storage:
    external: true
  kafka-volume:
    external: true